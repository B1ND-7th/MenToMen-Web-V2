import Search from "@/components/Search";
import { QUERY_KEYS } from "@/queries/queryKey";
import postRepository from "@/repositories/Post/post.repository";
import { NextPageContext } from "next";
import Head from "next/head";
import { dehydrate, QueryClient } from "react-query";

const SerachPage = ({ keyword }: { keyword: string }) => {
  return (
    <>
      <Head>
        <title>멘투멘 | {keyword} 검색</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Search />
    </>
  );
};

SerachPage.getInitialProps = async (ctx: NextPageContext) => {
  const queryClient = new QueryClient();

  if (ctx.query.keyword) {
    await Promise.all([
      queryClient.prefetchQuery(
        QUERY_KEYS.Post.getKeyWord(ctx.query.keyword as string),
        () => postRepository.getPostByKeyWord(ctx.query.keyword as string)
      ),
    ]);
  }

  return {
    keyword: ctx.query.keyword as string,
    props: {
      dehydratedState: dehydrate(queryClient),
    },
  };
};

export default SerachPage;
